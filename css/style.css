/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
/* Natour project*/

/*universal selector*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: "Lato", sans-serif;
    /*If !nato use sans*/
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}

.header {
    height: 95vh;
    background-image: linear-gradient(to right bottom,
            rgba(126, 213, 11, 0.8),
            rgba(40, 180, 131, 0.8)),
        url(../img/hero.jpg);
    background-size: cover;
    background-position: top;

    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

    position: relative;
}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
    /*these top and left values should be relative to the parent element
    parent element will include position relative
    header is the parent of logobox*/
}

.logo {
    height: 35px;
}

.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /* ..*/
    transform: translate(-50%, -50%);
    text-align: center;

}

.heading-primary {
    color: #FFF;
    text-transform: uppercase;

    /*after anim finished there is a bounce up motion. 
      add this to prevent it
    */
    backface-visibility: hidden;
    margin-bottom: 30px;
}

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    /*Add anim here to work*/
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;

    /*Add anim here to work*/
    animation: moveInRight 1s ease-out;

}

@keyframes moveInLeft {

    /*define each time what anim is going to do*/
    0% {
        opacity: 0;
        transform: translateX(-100px);
        /*Start a bit left at the begining*/
    }

    80% {
        transform: translateX(10px);
        /*it is going 10px further*/
    }

    100% {
        opacity: 1;
        transform: translateX(0);
        /*Finish at the right position*/
    }
}

@keyframes moveInRight {

    /*define each time what anim is going to do*/
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInBottom {

    /*define each time what anim is going to do*/
    0% {
        opacity: 0;
        transform: translateY(30px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

/*
*******************************************
PSEUDO CLASSES
It is a speacial state of the selector
:link
:hover 
:visited etc.
*******************************************
*/
.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    /*remove the underline of the a*/
    padding: 15px 40px;

    /*use inline block when you add paddings as it will be overlapping other elements
    inline block elements will be treated as if it is a text
    to center it, set text align center at text-box*/
    display: inline-block;
    border-radius: 100px;

    /*transition has to be in the initial state*/
    transition: all .2s;

    position: relative;

}

.btn:hover {
    transform: translateY(-3px);
    /* box-shadow: X Y Blur Color*/
    box-shadow: 0 10px 20px rgba(0, 0, 0, .2);
}

.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, .2);
}

.btn-white {
    background-color: #FFF;
    color: #777;
}

.btn::after {
    content: "";
    /* content mandotory to set otherwise wont display*/
    display: inline-block;
    /*button is inline block*/
    height: 100%;
    width: 100%;
    border-radius: 100px;


    position: absolute;
    top: 0;
    left: 0;
    /*absoulute positioning requieres relavent
    add postion:relative to the buttin (visited)*/

    /*The pseudo element is displayed over button. add zet index to send it to back of the button*/
    z-index: -1;

    /*add anim duration to the initial state*/
    transition: all .4s;
}

.btn-white::after {
    background-color: #FFF;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn-animated {
    /*anim name duration anim type delay*/
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards;
    /*auto apply anim 0% before the anim starts*/
}